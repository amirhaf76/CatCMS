@using System.Text.RegularExpressions;
@using System.ComponentModel.DataAnnotations;
@using CMSClient.Components.Logics
@using CMSClient.Services
@using CMSClient.Services.DTOs
@using Microsoft.AspNetCore.Authorization
@attribute [Route(CMSRoutes.LOGIN)]
@inject UserStatePublisherService StatePublisher;
@inject CustomAuthStateProvider AuthStateProvider;


<MudContainer MaxWidth="MaxWidth.Small">
    <MudText Class="pa-4 mx-auto " Typo="Typo.h3">Login</MudText>
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudPaper Height="50vh" Class="pa-4" Elevation="6">
                <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                    <MudTextField @bind-Value="@loginVM.Username"
                                  T="string"
                                  Label="Username"
                                  Required="true"
                                  RequiredError="User name is required!" />
                    <MudTextField @bind-Value="@loginVM.Password"
                                  T="string" 
                                  Label="Password" 
                                  HelperText="Choose a strong password" 
                                  @ref="pwField1"
                                  InputType="InputType.Password"
                                  RequiredError="Password is required!" />
                </MudForm>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" DropShadow="false" OnClick="@(LoginAsync)">Login</MudButton>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="5">
            <MudPaper Class="pa-4 mud-height-full" Elevation="6">
                <MudText Typo="Typo.subtitle2">@($"Errors ({errors.Length})")</MudText>
                @foreach (var error in errors)
                {
                    <MudText Color="@Color.Error">@error</MudText>
                }
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>


@code {
    bool success;
    string[] errors = { };
    MudTextField<string>? pwField1;
    MudForm? form;
    LoginVM loginVM = new LoginVM();

    private async Task LoginAsync()
    {
        await StatePublisher.LoginAsync(loginVM);
    }

}
